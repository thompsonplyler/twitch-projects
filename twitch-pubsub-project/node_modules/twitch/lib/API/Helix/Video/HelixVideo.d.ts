import TwitchClient from '../../../TwitchClient';
export declare type HelixVideoViewableStatus = 'public' | 'private';
export declare type HelixVideoType = 'upload' | 'archive' | 'highlight';
/** @private */
export interface HelixVideoData {
    id: string;
    user_id: string;
    user_name: string;
    title: string;
    description: string;
    created_at: string;
    published_at: string;
    url: string;
    thumbnail_url: string;
    viewable: HelixVideoViewableStatus;
    view_count: number;
    language: string;
    type: HelixVideoType;
    duration: string;
}
/**
 * A video on Twitch.
 */
export default class HelixVideo {
    private readonly _data;
    /** @private */
    protected readonly _client: TwitchClient;
    /** @private */
    constructor(_data: HelixVideoData, client: TwitchClient);
    /**
     * The ID of the video.
     */
    readonly id: string;
    /**
     * The ID of the user who created the video.
     */
    readonly userId: string;
    /**
     * The display name of the user who created the video.
     */
    readonly userDisplayName: string;
    /**
     * Retrieves information about the user who created the video.
     */
    getUser(): Promise<import("../User/HelixUser").default | null>;
    /**
     * The title of the video.
     */
    readonly title: string;
    /**
     * The description of the video.
     */
    readonly description: string;
    /**
     * The date when the video was created.
     */
    readonly creationDate: Date;
    /**
     * The date when the video was published.
     */
    readonly publishDate: Date;
    /**
     * The URL of the video.
     */
    readonly url: string;
    /**
     * The URL of the thumbnail of the video.
     */
    readonly thumbnailUrl: string;
    /**
     * Whether the video is public or not.
     */
    readonly isPublic: boolean;
    /**
     * The number of views of the video.
     */
    readonly views: number;
    /**
     * The language of the video.
     */
    readonly language: string;
    /**
     * The type of the video.
     */
    readonly type: HelixVideoType;
    /**
     * The duration of the video, as formatted by Twitch.
     */
    readonly duration: string;
    /**
     * The duration of the video, in seconds.
     */
    readonly durationInSeconds: number;
}
