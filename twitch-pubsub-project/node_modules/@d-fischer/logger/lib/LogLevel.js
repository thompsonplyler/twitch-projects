"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var _a;
var isNode = require("detect-node");
var LogLevel;
(function (LogLevel) {
    LogLevel[LogLevel["CRITICAL"] = 0] = "CRITICAL";
    LogLevel[LogLevel["ERROR"] = 1] = "ERROR";
    LogLevel[LogLevel["WARNING"] = 2] = "WARNING";
    LogLevel[LogLevel["INFO"] = 3] = "INFO";
    LogLevel[LogLevel["DEBUG1"] = 4] = "DEBUG1";
    LogLevel[LogLevel["DEBUG2"] = 5] = "DEBUG2";
    LogLevel[LogLevel["DEBUG3"] = 6] = "DEBUG3";
    LogLevel[LogLevel["TRACE"] = 7] = "TRACE";
})(LogLevel || (LogLevel = {}));
exports.default = LogLevel;
// Node 8+ defines console.debug as noop, and earlier versions don't define it at all
var debugFunction = isNode ? console.log.bind(console) : console.debug.bind(console);
// tslint:disable-next-line:no-any
exports.LogLevelToConsoleFunction = (_a = {},
    _a[LogLevel.CRITICAL] = console.error.bind(console),
    _a[LogLevel.ERROR] = console.error.bind(console),
    _a[LogLevel.WARNING] = console.warn.bind(console),
    _a[LogLevel.INFO] = console.info.bind(console),
    _a[LogLevel.DEBUG1] = debugFunction.bind(console),
    _a[LogLevel.DEBUG2] = debugFunction.bind(console),
    _a[LogLevel.DEBUG3] = debugFunction.bind(console),
    _a[LogLevel.TRACE] = console.trace.bind(console),
    _a);
//# sourceMappingURL=LogLevel.js.map