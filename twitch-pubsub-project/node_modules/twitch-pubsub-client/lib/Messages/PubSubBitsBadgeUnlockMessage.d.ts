import { PubSubBasicMessageInfo } from './PubSubMessage';
import TwitchClient from 'twitch';
import { MakeOptional } from '../Toolkit/Types';
export interface PubSubBitsBadgeUnlockMessageContent extends MakeOptional<PubSubBasicMessageInfo, 'channel_id' | 'channel_name' | 'user_id' | 'user_name'> {
    chat_message: string;
    badge_tier: number;
}
export interface PubSubBitsBadgeUnlockMessageData {
    data: PubSubBitsBadgeUnlockMessageContent;
    version: string;
    message_type: string;
    message_id: string;
}
/**
 * A message that informs about a user unlocking a new bits badge.
 */
export default class PubSubBitsBadgeUnlockMessage {
    private readonly _data;
    private readonly _twitchClient;
    /** @private */
    constructor(_data: PubSubBitsBadgeUnlockMessageData, twitchClient: TwitchClient);
    /**
     * The ID of the user that unlocked the badge.
     */
    readonly userId: string | undefined;
    /**
     * The name of the user that unlocked the badge.
     */
    readonly userName: string | undefined;
    /**
     * Retrieves more data about the user.
     */
    getUser(): Promise<import("twitch").HelixUser | null>;
    /**
     * The full message that was sent with the notification.
     */
    readonly message: string;
    /**
     * The new badge tier.
     */
    readonly badgeTier: number;
}
