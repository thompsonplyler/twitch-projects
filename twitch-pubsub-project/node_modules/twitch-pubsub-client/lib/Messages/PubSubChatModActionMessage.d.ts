import TwitchClient from 'twitch';
export interface PubSubChatModActionMessageContent {
    type: string;
    moderation_action: string;
    args: string[];
    created_by: string;
    created_by_user_id: string;
}
export interface PubSubChatModActionMessageData {
    data: PubSubChatModActionMessageContent;
}
/**
 * A message that informs about a moderation action being performed in a channel.
 */
export default class PubSubChatModActionMessage {
    private readonly _data;
    private readonly _channelId;
    private readonly _twitchClient;
    /** @private */
    constructor(_data: PubSubChatModActionMessageData, _channelId: string, twitchClient: TwitchClient);
    /**
     * The ID of the channel where the action was performed.
     */
    readonly channelId: string;
    /**
     * Retrieves more info about the channel where the action was performed.
     */
    getChannel(): Promise<import("twitch").HelixUser | null>;
    /**
     * The type of the message.
     */
    readonly type: string;
    /**
     * The action that was performed.
     */
    readonly action: string;
    /**
     * The arguments given to the action.
     */
    readonly args: string[];
    /**
     * The user ID of the moderator that performed the action.
     */
    readonly userId: string;
    /**
     * The name of the moderator that performed the action.
     */
    readonly userName: string;
    /**
     * Retrieves more data about the user that performed the action.
     */
    getUser(): Promise<import("twitch").HelixUser | null>;
}
