"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var twitch_1 = require("twitch");
var SingleUserPubSubClient_1 = require("./SingleUserPubSubClient");
var BasicPubSubClient_1 = require("./BasicPubSubClient");
var Decorators_1 = require("./Toolkit/Decorators");
var PubSubClient = /** @class */ (function () {
    function PubSubClient() {
        this._rootClient = new BasicPubSubClient_1.default();
        this._userClients = new Map();
    }
    PubSubClient.prototype.registerUserListener = function (twitchClient, user) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var userId, tokenInfo;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!user) return [3 /*break*/, 1];
                        userId = twitch_1.extractUserId(user);
                        return [3 /*break*/, 3];
                    case 1: return [4 /*yield*/, twitchClient.getTokenInfo()];
                    case 2:
                        tokenInfo = _a.sent();
                        if (!tokenInfo.userId) {
                            throw new Error('Passed a Twitch client that is not bound to a user');
                        }
                        userId = tokenInfo.userId;
                        _a.label = 3;
                    case 3:
                        this._userClients.set(userId, new SingleUserPubSubClient_1.default({ twitchClient: twitchClient, pubSubClient: this._rootClient }));
                        return [2 /*return*/];
                }
            });
        });
    };
    PubSubClient.prototype.getUserListener = function (user) {
        var userId = twitch_1.extractUserId(user);
        if (!this._userClients.has(userId)) {
            throw new Error("No Twitch client registered for user ID " + userId);
        }
        return this._userClients.get(userId);
    };
    PubSubClient.prototype.onBits = function (user, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                return [2 /*return*/, this.getUserListener(user).onBits(callback)];
            });
        });
    };
    PubSubClient.prototype.onBitsBadgeUnlock = function (user, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                return [2 /*return*/, this.getUserListener(user).onBitsBadgeUnlock(callback)];
            });
        });
    };
    PubSubClient.prototype.onSubscription = function (user, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                return [2 /*return*/, this.getUserListener(user).onSubscription(callback)];
            });
        });
    };
    PubSubClient.prototype.onWhisper = function (user, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                return [2 /*return*/, this.getUserListener(user).onWhisper(callback)];
            });
        });
    };
    PubSubClient.prototype.onModAction = function (user, channel, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                return [2 /*return*/, this.getUserListener(user).onModAction(channel, callback)];
            });
        });
    };
    tslib_1.__decorate([
        Decorators_1.NonEnumerable
    ], PubSubClient.prototype, "_rootClient", void 0);
    tslib_1.__decorate([
        Decorators_1.NonEnumerable
    ], PubSubClient.prototype, "_userClients", void 0);
    return PubSubClient;
}());
exports.default = PubSubClient;
//# sourceMappingURL=PubSubClient.js.map